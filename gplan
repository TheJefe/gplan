#!/usr/bin/env ruby
#
# This script is used to find all of the planbox story numbers from the git log
# For lesson-player it is dependent on lesson-player being in the directory name for the repo

require 'httparty'
include HTTParty
EMAIL=ENV['PLANBOX_EMAIL']
TOKEN=ENV['PLANBOX_TOKEN']

def login
    response = self.class.post("https://www.planbox.com/api/login", { :body => {:email => EMAIL, :password => TOKEN}})
    cookie = HTTParty::CookieHash.new
    cookie.add_cookies(response.headers["set-cookie"])
    self.class.cookies(cookie)
end

def get_story(story_id)
    story_response = self.class.post('https://www.planbox.com/api/get_story', { :body => { :story_id => story_id}})
    return story_response.parsed_response["content"] unless story_response.parsed_response.nil? || story_response.parsed_response["code"] == "error"
    {"id" => story_id, "name" => "story not found in planbox"}
end

def get_stories(array_of_pb_ids)
        login
        stories = []
        return [] unless array_of_pb_ids
        array_of_pb_ids.each do |id|
                stories<< get_story(id)
        end
        stories
end

# formats the output of stories
def format(stories)
        result_string = ""
        stories.each do |story|
                result_string += "#{story['id']}:"
                result_string += "#{story['status']}: "
                result_string += "#{story['name']}"
                result_string += "\n"
        end

        # clean up any troublesome chars
        result_string.gsub!('`', ' ') || result_string
end

# cleans up the results
def clean( results )
        results.each do |i|
                i.gsub!('fixes', '') || i
                i.gsub!('Fixes', '') || i
                i.gsub!(' ', '') || i
                i.gsub!('[', '') || i
                i.gsub!('#', '') || i
                i.gsub!(']', '') || i
        end
        results.uniq
end


# MAIN
prod_branch="production/master"
if Dir.pwd.include? "lesson-player"
        `git fetch origin`
        prod_branch="origin/master"
else
        `git fetch production`
end
list= `git log #{prod_branch}..`
results = list.scan(/\[ ?#[0-9]+ ?\]/) # find everything between [ and ]
clean_results = clean results
stories = get_stories clean_results
result_string = format stories
cmd = "echo \"#{result_string}\" | mvim -R - &"
`#{cmd}`
